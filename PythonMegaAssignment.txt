
  Q26. What is a string? How can we declare string in Python?

  -> A string is a series of characters. In Python, anything inside quotes is a string.
     We can use either single or double quotes to declare a string in python.
     For example: message = 'This is a string in Python' message = "This is also a string"
     
  Q27. How can we access the string using its index?

  -> We can access the string using the index number of each character in string.
     for ex - str1 = "Omkar"
            print(str1[0])
            print(str1[1])
            print(str1[2])
            print(str1[3])
            print(str1[4])
          
  Q28. Write a code to get the desired output of the following
      string = "Big Data iNeuron"
      desired_output = "iNeuron"
      
      -> code :   string1 = "Big Data iNeuron"
                  print('desired_output = "',string1[9: ],'"')
                  
  Q29. Write a code to get the desired output of the following

      string = "Big Data iNeuron"
      desired_output = "norueNi"
      
      -> Code : string1 = "Big Data iNeuron"
         print('desired_output = "',string1[ -1: -8 :-1],'"')
         
  Q30. Resverse the string given in the above question.

      -> Code : string1 = "Big Data iNeuron"
         print('desired_output = "',string1[ -1 : : -1],'"')
           
  Q31. How can you delete entire string at once?

      -> We can delete a entire string using the keyword 'del'. syntax : del stringname
         for ex - string2 = "sample string"
         del string2
         
  Q32. What is escape sequence?

     -> An escape sequence is a sequence of characters that, when used inside a character or string, does not represent itself but is converted into             another character or series of characters.
        Character combinations consisting of a backslash (\) followed by a letter or by a combination of digits are called "escape sequences."
        To represent a newline character, single quotation mark, or certain other characters in a character constant, we must use escape sequences.
        for ex - \' - single quote, \\ - backslash, \n - new line, \t - Tab, \b - backspace
        
  Q33. How can you print the below string?
 
     'iNeuron's Big Data Course'

      -> string4 = "\'iNeuron\'s Big Data Course\'"
         print(string4)
         
  Q34. What is a list in Python?

      -> List is used to store multiple items in a single variable.
         A list can have any number of items and they may be of different types (integer, float, string, etc.).
         A list can also have another list as an item. This is called a nested list.
         
  Q35. How can you create a list in Python?
  
      -> In Python, a list is created by placing elements inside square brackets [] , separated by commas.
         for ex - list1 = [1,2,3,4,'omkar','rane','good',6,7,8]
         
  Q36. How can we access the elements in a list?

      -> We can access the elements in a list by using the index number of a certain element in the list.
         for ex - list1 = [1,2,3,4,'omkar','rane','good',6,7,8]
                  print(list1[0])
                  print(list1[1])
                  print(list1[2])
                  print(list1[3])
          This print statements will display the first four elemants of the list one by one.
          
  Q37. Write a code to access the word "iNeuron" from the given list.
      lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
       
       -> Code :  lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
                  newlist = list((lst[4]))
                  print(newlist)
                  print(newlist[2])
                  
  Q38. Take a list as an input from the user and find the length of the list.
  
      -> Code : list5 = []
                n = int(input("Enter the number of elements to be insertes in a list: "))

                  for i in range(0,n):
                      param = input("Enter the elemenst in the list: ")
                      list5.append(param)
                  print(list5)
                  print(type(list5))
                  print("The length of list is:",len(list5))
                  
  Q39. Add the word "Big" in the 3rd index of the given list.
      lst = ["Welcome", "to", "Data", "course"]

      -> We can achieve this using the insert() funtion in the code.
      Code : lst = ["Welcome", "to", "Data", "course"]
             lst.insert(2, "Big")
             print(lst)
        
  Q40. What is a tuple? How is it different from list?

      -> Tuple is also used to store multiple values in a single variable.
         The primary difference between tuples and lists is that tuples are immutable as opposed to lists which are mutable.
   
  Q41. How can you create a tuple in Python?

      -> We can create a tuple in python using round brackets assigned to a variable name.
         for ex  - t1 = (10,20,30,40,50)
         
  Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.

      -> No, we cannot add any value in a tuple after a tuple is declared or created. The reason is that the tuples in python are immutable i.e we cannot          change,edit or update any tuple after its declaration.
      
  Q43. Can two tuple be appended. If yes, write a code for it. If not, why?

       -> No, we cannot use append function on a tuple but we can add two tuples and store those values in a new tuple using the (+) operator.
       Code :   t2 = (20,30,40,50)
                t3 = (30,20,14,12,9,8)
                t4 = t3 + t2
                print('The new tuple after appending is:',t4)
                
  Q44. Take a tuple as an input and print the count of elements in it.

      -> Code: mytuple = tuple(input('Enter the values of tuple but space separated ').split())
               print(mytuple)
               print(len(mytuple))
               
  Q45. What are sets in Python?

      -> A set is an unordered collection of items or elements in a single variable. Also sets in python does not allow any duplicate values so only              unique values can be added in a set.
         A set is mutable so we can perform add and remove operations on a set.
         Sets can also be used to perform mathematical set operations like union, intersection,etc.
         
  Q46. How can you create a set?

      -> A set can be created by placing all the items (elements) inside curly braces {}, separated by comma, or by using the built-in set() function.
       for ex - set1 = {1,2,3,4,5}
                 set2 = set()
                 
  Q47. Create a set and add "iNeuron" in your set.

      ->  Code : sampleset = set()
                 sampleset.add('iNeuron')
                 print(sampleset)
                 
  Q48. Try to add multiple values using add() function.

      -> sampleset = set()
         sampleset.add(1)
         sampleset.add(2)
         sampleset.add(7)
         sampleset.add(4)
         sampleset.add(5)
         sampleset.add(6)
         sampleset.add(3)
         print(sampleset)
         
  Q49. How is update() different from add()?
  
      -> update() function is different from the add() function because using update() we can add multiple values at once in a set and using add() we can          only add a single value at a time in a set.
         for ex - set1.add(1)
                  set1.add(2)
                  set1.update([3,4,5])
                  o/p : {1,2,3,4,5}
                  
  Q50. What is clear() in sets?
  
      -> The clear() method is used to remove all the elements in a set.
      
  Q51. What is frozen set?

      -> Frozen set is just an immutable version of a Python set object.
      While elements of a set can be modified at any time, elements of the frozen set remains the same after creation.
      Due to this, frozen sets can be used as keys in Dictionary or as elements of another set.
      
  Q52. How is frozen set different from set?

      -> The elememts in a set can be updated or edited but the elemments in a frozen set cannot be edited or changed once created or declared at the          time of creation.
      
  Q53. What is union() in sets? Explain via code.

      -> The union() method returns a set that contains all items from the original set, and all items from the specified set(s).
         We can specify as many sets as we want, separated by commas.
         for ex - x = {"a", "b", "c"}
                  y = {"e", "d", "f"}
                  z = {"g", "h", "i"}
                  result = x.union(y, z)
                  print(result)
                  
  Q54. What is intersection() in sets? Explain via code.

      -> The intersection() method returns a set that contains the similarity between two or more sets.
         Meaning: The returned set contains only items that exist in both sets, or in all sets if the comparison is done with more than two sets.
         ex - x = {"a", "b", "c"}
              y = {"c", "d", "e"}
              z = {"f", "g", "c"}
              result = x.intersection(y,z)
              print(result)
              
  Q55. What is dictionary in Python?
   
      -> Dictionary is used to store data values in key:value pairs.
        A dictionary is a collection which is ordered*, mutable and do not allow duplicates.
        A dictionary consists of a collection of key-value pairs. Each key-value pair maps the key to its associated value.
        
  Q56. How is dictionary different from all other data structures.

      -> Dictionaries are used to store data values in key:value pairs. The other data structures in python stores direct comma separated values in them.
         A dictionary is a collection which is ordered*, changeable and do not allow duplicates.
         Other data structures such as a list allows duplicates in it.
         
  Q57. How can we delare a dictionary in Python?

      -> We can delete a whole dictionary by using a keyword known as 'del'.
         for ex - dict1 = {'name':'omkar',"age":23}
         del dict1
         
  Q58. What will the output of the following?
        var = {}
        print(type(var))

      -> The output of the above mentioned code will be <class 'dict'>. This means that the type of data structure defined is of type dictionary.
      
  Q59. How can we add an element in a dictionary?

      -> We can add new element in python in the key-value format with the help of keys.
         for ex - var{}
                  var['name'] = 'Omkar'
                  var['age'] = 23
                  print(var)
             o/p : {'name': 'Omkar', 'age': 23}
             
  Q60. Create a dictionary and access all the values in that dictionary.
  
      -> Code : var = {}
         var['name'] = 'Omkar'
         var['age'] = 23
         var['other_details'] = {'color' : 'Fair', 'nationality' : 'Indian'}
         var['states_visited'] = ['Maharashtra','Karnataka','Goa']
         var['skills'] = ['Python','SQL','Linux']
         
         keyvalues = list(var.values())
         print('All the values in the dictionary var are:', keyvalues)
         
  Q61. Create a nested dictionary and access all the element in the inner dictionary.

      -> Code : dict3 = {}
                dict3['my_details'] = {'color' : 'Fair', 'nationality' : 'Indian','address':'Mumbai','hobby':'carrom'}
                print(dict3['my_details'])
                
  Q62. What is the use of get() function?

     -> The get() method returns the value of the item with the specified key.
        for ex - car = { "brand": "Ford",  "model": "Mustang",  "year": 1964}
                 x = car.get("model")
                 print(x)
                 
  Q63. What is the use of items() function?

      -> The items() method returns a view object. The view object contains the key-value pairs of the dictionary, as tuples in a list.
        for ex - car = { "brand": "Ford",  "model": "Mustang",  "year": 1964}
        x = car.items()
        print(x)
           o/p : dict_items([('brand', 'Ford'), ('model', 'Mustang'), ('year', 1964)])
           
  Q64. What is the use of pop() function?

      -> The pop() function is used to remove any item from a list or dictionary.
         It is a built function that removes an item at the specified index from the list.
         We can also use pop in Python without mentioning the index value. In such cases, the pop() function will remove the last element of the list.
         Also to remove any element from the dictionary we can specify the key of that element in the pop() function.
         for ex - car.pop("model")
         
  Q65. What is the use of popitems() function?
  
      -> The popitem() method removes the last inserted key-value pair from the dictionary and returns it as a tuple.
         for ex - test_dict = {"Nikhil": 7, "Akshat": 1, "Akash": 2}
         res = test_dict.popitem()
         print(res)
         print(test_dict)
         
  Q66. What is the use of keys() function?

      -> The key() function is used to fetch all the keys in a dictionary.
      for ex - total_keys = list(dict2.keys())
               print("Total Keys in dictionary : ",total_keys)
               
  Q67. What is the use of values() function?

      -> The value() function is used to fetch all the values of keys in a dictionary.
         for ex - total_values = list(dict2.values())
                  print("Total Values in dictionary : ",total_values)
                  
  Q68. What are loops in Python?

      -> Looping in python means repeating something over and over until a particular condition is satisfied.
         The group of statements being executed repeatedly is called a loop.
        
  Q69. How many type of loop are there in Python?

      -> There are three types of loops in python.
         For Loop : A for loop in Python is used to iterate over a sequence (list, tuple, set, dictionary, and string).
         While Loop : The while loop is used to execute a set of statements as long as a condition is true.
         Nested Loop : If a loop exists inside the body of another loop, it is called a nested loop.
         
  Q70. What is the difference between for and while loops?

      -> The 'for' loop used only when we already knew the number of iterations.
         The 'while' loop used only when the number of iteration are not exactly known.
         If the condition is not put up in 'for' loop, then loop iterates infinite times.
         If the condition is not put up in 'while' loop, it provides compilation error.
         
  Q71. What is the use of continue statement?

      -> The continue keyword is used to end the current iteration in a for loop or a while loop, and continues to the next iteration.
         for ex - for i in range(9):
                      if i == 3:
                          continue
                      print(i)
                      
  Q72. What is the use of break statement?

      -> The break keyword is used to break out a for loop, or a while loop.
         for ex - i = 1
                  while i < 9:
                      print(i)
                      if i == 3:
                      break
                      i += 1

  Q73. What is the use of pass statement?

      -> The pass statement is used as a placeholder for future code.
         When the pass statement is executed, nothing happens, but you avoid getting an error when empty code is not allowed.
         Empty code is not allowed in loops, function definitions, class definitions, or in if statements.
         for ex - def myfunction():
                      pass

  Q74. What is the use of range() function?

      -> The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1 (by default), and stops before a specified            number in the function.
         We can specify 3 values in a range() function.
         start: An integer number specifying at which position to start. Default is 0
         stop: An integer number specifying at which position to stop (not included).
         step: An integer number specifying the incrementation. Default is 1
         for ex - x = range(3, 20, 2)
                  for n in x:
                      print(n)
         
  Q75. How can you loop over a dictionary?

      -> We can loop over a dictionary by using a for loop.
         When looping through a dictionary, the return values are the keys of the dictionary, but there are methods to return the values as well.
         for ex - for k,v in test_dict.items():
                      print(k,v)
                      
                      
  Coding problems are solved separately in codingProblems.md file
  
  
 
       
            
